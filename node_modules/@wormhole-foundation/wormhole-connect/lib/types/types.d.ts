import { Theme } from "./theme";
export declare const MAINNET_CHAINS: {
    readonly solana: 1;
    readonly ethereum: 2;
    readonly bsc: 4;
    readonly polygon: 5;
    readonly avalanche: 6;
    readonly fantom: 10;
    readonly celo: 14;
    readonly moonbeam: 16;
    readonly osmosis: 20;
    readonly sui: 21;
    readonly aptos: 22;
    readonly arbitrum: 23;
    readonly optimism: 24;
    readonly base: 30;
};
export type MainnetChainName = keyof typeof MAINNET_CHAINS;
export type MainnetChainId = (typeof MAINNET_CHAINS)[MainnetChainName];
export declare const TESTNET_CHAINS: {
    readonly solana: 1;
    readonly goerli: 2;
    readonly bsc: 4;
    readonly mumbai: 5;
    readonly fuji: 6;
    readonly fantom: 10;
    readonly alfajores: 14;
    readonly moonbasealpha: 16;
    readonly osmosis: 20;
    readonly sui: 21;
    readonly aptos: 22;
    readonly arbitrumgoerli: 23;
    readonly optimismgoerli: 24;
    readonly basegoerli: 30;
};
export type TestnetChainName = keyof typeof TESTNET_CHAINS;
export type TestnetChainId = (typeof TESTNET_CHAINS)[TestnetChainName];
export type ChainName = MainnetChainName | TestnetChainName;
export type ChainId = MainnetChainId | TestnetChainId;
export type Rpcs = {
    [chain in ChainName]?: string;
};
export interface BridgeDefaults {
    fromNetwork?: ChainName;
    toNetwork?: ChainName;
    token?: string;
    requiredNetwork?: ChainName;
}
export interface WormholeConnectConfig {
    env?: "mainnet" | "testnet" | "devnet";
    rpcs?: Rpcs;
    rest?: Rpcs;
    networks?: ChainName[];
    tokens?: string[];
    mode?: "dark" | "light";
    customTheme?: Theme;
    cta?: {
        text: string;
        link: string;
    };
    bridgeDefaults?: BridgeDefaults;
    routes?: string[];
    pageHeader?: string;
}
